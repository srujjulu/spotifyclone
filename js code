console.log("Welcome to Spotify");

// Initialize the Variables
let songIndex = 0;
let audioElement = new Audio(songs[songIndex].filepath); // Initialize with first song
let masterPlay = document.getElementById('masterPlay');
let myProgressBar = document.getElementById('myProgressBar');
let masterSongName = document.getElementById('masterSongName');
let gif = document.getElementById('gif');
let songItems = Array.from(document.getElementsByClassName('songItem'));

// Define the song list with relative paths
let songs = [
    { songName: "Gala Gala", filepath: "audio/gala_gala.mp3", coverPath: "images/gala_gala.jpeg" },
    { songName: "Jennifer Lopez - Sen", filepath: "audio/jennifer_lopez_sen.mp3", coverPath: "images/jf.jpeg" },
    { songName: "Kathi Lanti Pilla", filepath: "audio/kathi_lanti_pilla.mp3", coverPath: "images/kathi_lanti_pilla.jpeg" },
    { songName: "Shape Of You", filepath: "audio/shape_of_you.mp3", coverPath: "images/shape_of_you.jpeg" }
];

// Populate song items with song data
songItems.forEach((element, i) => {
    element.getElementsByTagName("img")[0].src = songs[i].coverPath; // Set image source
    element.getElementsByClassName("songName")[0].innerText = songs[i].songName; // Set song name
});

// Handle Play/Pause click for the main play button
masterPlay.addEventListener('click', () => {
    if (audioElement.paused || audioElement.currentTime <= 0) {
        audioElement.play();
        masterPlay.classList.remove('fa-play-circle');
        masterPlay.classList.add('fa-pause-circle');
        gif.style.opacity = 1;
    } else {
        audioElement.pause();
        masterPlay.classList.remove('fa-pause-circle');
        masterPlay.classList.add('fa-play-circle');
        gif.style.opacity = 0;
    }
});

// Update progress bar as the song plays
audioElement.addEventListener('timeupdate', () => {
    let progress = parseInt((audioElement.currentTime / audioElement.duration) * 100);
    myProgressBar.value = progress;
});

// Allow user to seek through the song using the progress bar
myProgressBar.addEventListener('change', () => {
    audioElement.currentTime = (myProgressBar.value * audioElement.duration) / 100;
});

// Play the selected song when any play button is clicked
Array.from(document.getElementsByClassName('play-button')).forEach((element) => {
    element.addEventListener('click', (e) => {
        makeAllPlays(); // Reset all play buttons to the play state
        songIndex = parseInt(e.target.id); // Get the index of the song from the button ID
        audioElement.src = songs[songIndex].filepath; // Change the source to the selected song
        audioElement.play(); // Play the selected song
        masterSongName.innerText = songs[songIndex].songName; // Update the master song name
        gif.style.opacity = 1; // Show the playing GIF
        e.target.classList.remove('fa-play-circle');
        e.target.classList.add('fa-pause-circle');
        masterPlay.classList.remove('fa-play-circle');
        masterPlay.classList.add('fa-pause-circle');
    });
});

// Helper function to reset all play buttons to play state
function makeAllPlays() {
    Array.from(document.getElementsByClassName('play-button')).forEach((element) => {
        element.classList.remove('fa-pause-circle');
        element.classList.add('fa-play-circle');
    });
}
